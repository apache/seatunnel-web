<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.seatunnel.app.dal.mapper.JobMetricsHistoryMapper">
    <resultMap id="BaseResultMap" type="org.apache.seatunnel.app.dal.entity.JobMetricsHistory">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="job_instance_id" jdbcType="BIGINT" property="jobInstanceId"/>
        <result column="pipeline_id" jdbcType="INTEGER" property="pipelineId"/>
        <result column="read_row_count" jdbcType="BIGINT" property="readRowCount"/>
        <result column="write_row_count" jdbcType="BIGINT" property="writeRowCount"/>
        <result column="source_table_names" jdbcType="VARCHAR" property="sourceTableNames"/>
        <result column="sink_table_names" jdbcType="VARCHAR" property="sinkTableNames"/>
        <result column="read_qps" jdbcType="BIGINT" property="readQps"/>
        <result column="write_qps" jdbcType="BIGINT" property="writeQps"/>
        <result column="record_delay" jdbcType="BIGINT" property="recordDelay"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, job_instance_id, pipeline_id, read_row_count, write_row_count, 
        source_table_names, sink_table_names, read_qps, write_qps, record_delay,
        status, create_user_id, update_user_id, create_time, update_time
    </sql>

    <insert id="insertBatchMetrics">
        insert into t_st_job_metrics_history (
            <include refid="Base_Column_List"/>
        )
        values
        <foreach collection="jobMetricsHistories" item="metrics" separator=",">
            (
                #{metrics.id},
                #{metrics.jobInstanceId},
                #{metrics.pipelineId},
                #{metrics.readRowCount},
                #{metrics.writeRowCount},
                #{metrics.sourceTableNames},
                #{metrics.sinkTableNames},
                #{metrics.readQps},
                #{metrics.writeQps},
                #{metrics.recordDelay},
                #{metrics.status},
                #{metrics.createUserId},
                #{metrics.updateUserId},
                #{metrics.createTime},
                #{metrics.updateTime}
            )
        </foreach>
    </insert>

    <select id="queryJobMetricsHistoryByInstanceId" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from t_st_job_metrics_history
        where job_instance_id = #{jobInstanceId}
        order by create_time asc
    </select>

    <select id="queryJobMetricsHistoryByInstanceIdAndPipelineId" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from t_st_job_metrics_history
        where job_instance_id = #{jobInstanceId}
        and pipeline_id = #{pipelineId}
        order by create_time desc
    </select>

    <select id="queryJobMetricsHistoryByInstanceIdAndTimeRange" resultType="org.apache.seatunnel.app.dal.entity.JobMetricsHistory">
        SELECT *
        FROM t_st_job_metrics_history
        WHERE job_instance_id = #{jobInstanceId}
        <if test="startTime != null">
            AND create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            AND create_time &lt;= #{endTime}
        </if>
        ORDER BY create_time ASC
    </select>
</mapper> 